//化学反応式一覧のjsonファイル出力メソッド
function outputKagakuHannousikiFunc(){
  //スプレッドシートのID
  var id1 = "##スプレッドシートID##"
  var file = SpreadsheetApp.openById(id1);
  var sheet1 = file.getSheetByName("化学反応式一覧");
  var sheet2 = file.getSheetByName("マクロ実行");
  var kagakuHannousikiList = [];
  var kagakuHannousiki;
  var keisu, hannoubutu, seiseibutu;
  var HannouKeisuList
  var HannouButuList
  var SeiseiKeisuList
  var SeiseiButuList
  var HannouType
  var col, row;
  var MaxHannouSu = 5;
  var MaxSeiseiSu = 5;
  var count = 0;
  
  col = 2
  row = 1
  while(true){
    count = count + 1;
    row = 1;
    HannouType = sheet1.getRange(col, row).getValue();
    if(HannouType == ""){
      HannouType = "-"
    }
    
    row = 2;
    keisu = sheet1.getRange(col, row).getValue();
    if(keisu == ""){
      break;
    }else{
      HannouKeisuList = [];
      HannouButuList = [];
      for(var i=0; i<MaxHannouSu; i=i+2){
        keisu = sheet1.getRange(col, row+i).getValue();
        hannoubutu = sheet1.getRange(col, row+i+1).getValue();
        if(hannoubutu != ""){
          HannouKeisuList.push(keisu);
          HannouButuList.push(hannoubutu);
        }
      }
      
      
      row = 12;
      SeiseiKeisuList = [];
      SeiseiButuList = [];
      for(var i=0; i<MaxSeiseiSu; i=i+2){
        keisu = sheet1.getRange(col, row+i).getValue();
        seiseibutu = sheet1.getRange(col, row+i+1).getValue();
        if(seiseibutu != ""){
          SeiseiKeisuList.push(keisu);
          SeiseiButuList.push(seiseibutu);
        }
      }
      
      kagakuHannousiki = new kagakuHannousikiFunc(count,HannouKeisuList, HannouButuList,SeiseiKeisuList,SeiseiButuList,HannouType)
      kagakuHannousikiList.push(kagakuHannousiki)
    }
    col++;

  }
  
  var jsonStr = JSON.stringify(kagakuHannousikiList);  
  var folderId = sheet2.getRange(2,1).getValue();
  createFile("kagakuHannouSiki.json", jsonStr, folderId); 
    
  
}

//化学式JSONデータ出力メソッド
function outputKagakusikiFunc() {
  //スプレッドシートのID
  var id1 = "##スプレッドシートID##"
  var file = SpreadsheetApp.openById(id1);
  var sheet1 = file.getSheetByName("化学式一覧");
  var sheet2 = file.getSheetByName("マクロ実行");
  var kagakusikiList = [];
  var kagakusiki;
  var mainName;
  var alias;
  var aliasList;
  var col, row;
  var MaxAliasSu = 5;
  var count = 0;
  
  col = 2
  row = 1
  while(true){
    row=1;
    count = count + 1;
    mainName = sheet1.getRange(col, row).getValue();
    if(mainName == ""){
      break;
    }else{
      aliasList = [];
      row=2;
      for(var i=0; i<MaxAliasSu; i++){
        alias = sheet1.getRange(col, row+i).getValue();
        if(alias != ""){
          aliasList.push(alias)
        }
      }
      
      kagakusiki = new kagakuSikiFunc(count, mainName, aliasList);
      kagakusikiList.push(kagakusiki);
    }
    col++;
  }
  
  var jsonStr = JSON.stringify(kagakusikiList);  
  var folderId = sheet2.getRange(2,1).getValue();
  createFile("kagakusiki.json", jsonStr, folderId);
  
}

var kagakuSikiFunc=function(id, mainName, aliasList){
  this.id = id;
  this.mainName = mainName;
  this.aliasList = aliasList;
}

var kagakuHannousikiFunc=function(id,HannouKeisuList, HannouButuList,SeiseiKeisuList,SeiseiButuList,HannouType){
  this.id = id;
  this.HannouKeisuList = HannouKeisuList;
  this.HannouButuList = HannouButuList;
  this.SeiseiKeisuList = SeiseiKeisuList;
  this.SeiseiButuList = SeiseiButuList;
  this.HannouType = HannouType;
}

/**
 *ソース元:https://hrroct.hatenablog.com/entry/2019/02/28/000000
 * ファイル書き出し
 * @param {string} fileName ファイル名
 * @param {string} content ファイルの内容
 */
function createFile(fileName, content, folderId) {  
  var folder = DriveApp.getFolderById(folderId);
  var contentType = 'text/plain';
  var charset = 'utf-8';

  // Blob を作成する
  var blob = Utilities.newBlob('', contentType, fileName)
                      .setDataFromString(content, charset);

  // ファイルに保存
  folder.createFile(blob);
}
