//チャンネルから動画取得用メソッド(実行する関数)
function scraping4(channelId){
  var objSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = objSpreadsheet.getSheetByName("channelInfo");

  //プレイリストのID
  var playlistId;
  var maxResult=5;
  var channelId = sheet.getRange(2,2).getValue();  
  //APIキー
  var apiKey = sheet.getRange(3,2).getValue();
  //開始日時
  var publishedAfter=sheet.getRange(4,2).getValue();
  //終了日時
  var publishedBefore=sheet.getRange(5,2).getValue();
  var maxCallCount = sheet.getRange(6,2).getValue();
  
  var URL1 = 'https://www.googleapis.com/youtube/v3/channels?part=contentDetails'
  URL1 += '&id=';
  URL1 += channelId;
  URL1 += '&key=';
  URL1 += apiKey;
  
  var response = UrlFetchApp.fetch(URL1);
  var html = response.getContentText('UTF-8');
  var lines = html.split("\n");
  playlistId = getPlayListId(lines);
  
  scraping3(playlistId, maxResult, apiKey, publishedAfter, publishedBefore, maxCallCount);
  
}

function getPlayListId(htmlStr){
  var result = '';
  var line = "";
  for(var i=0; i < htmlStr.length; i++){
    line = htmlStr[i];
    if(line.indexOf('"uploads":') != -1){
      result = line.replace('"uploads":', '');
      result = result.replace('"', '');
      result = result.replace('"', '');
      result = result.replace(',', '');
      result = result.replace(/\s+/g,'');
      return result;
    }
  }
}

function scraping3(playlistId, maxResult, apiKey, publishedAfter, publishedBefore, maxCallCount){
  var objSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = objSpreadsheet.getSheetByName("youtubeLinkGet");
  
  var result = scraping2(playlistId, maxResult, apiKey, publishedAfter, publishedBefore, maxCallCount);
  var colIdx = 2;
  for(var i=0; i<result.length; i++){
    sheet.getRange(colIdx, 1).setValue(result[i].title);
    sheet.getRange(colIdx, 2).setValue(result[i].videoId);
    colIdx++;
  }
  
}

function scraping2(playlistId, maxResult, apiKey, publishedAfter, publishedBefore, maxCallCount){
  
  var firstFlg = true;
  var htmlLines;
  var pageToken = '';
  var TitleAndVideoIdList = [];
  var List1;
  var CallCount = 0;
  
  while(true){
    if(firstFlg == true){
      htmlLines = GetFirstPageHtmlStr(playlistId, maxResult, apiKey, publishedAfter, publishedBefore);
      firstFlg = false;
    }else{
      htmlLines = GetOnePageHtmlStr(pageToken, playlistId, maxResult, apiKey, publishedAfter, publishedBefore);
    }
    List1 = GetVideoIdAndTitle(htmlLines);
    for(var i=0; i<List1.length; i++){
      TitleAndVideoIdList.push(List1[i]);
    }
    
    pageToken = GetNextPageToken(htmlLines);
    if(pageToken.indexOf('-ENDED-') != -1 || CallCount >= maxCallCount){
      break;
    }else{
      CallCount++;
    }
    
  }
  
  return TitleAndVideoIdList;  
}

function GetNextPageToken(htmlStr){
  var result = '';
  var line = "";
  for(var i=0; i < htmlStr.length; i++){
    line = htmlStr[i];
    if(line.indexOf('"nextPageToken":') != -1){
      result = line.replace('"nextPageToken":', '');
      result = result.replace('"', '');
      result = result.replace('"', '');
      result = result.replace(',', '');
      result = result.replace(/\s+/g,'');
      return result;
    }
  }
  
  result = '-ENDED-';
  return result;
    
}

function GetVideoIdAndTitle(htmlStr){
  var resultList = []
  var line1 = "";
  var line2 = "";
  var title = "";
  var videoId = "";
  
  for(var i=0; i<htmlStr.length; i++){
    line1 = htmlStr[i];
    if(line1.indexOf('"title":') != -1){
      title = line1.replace('"', '');
      title = title.replace('"', '');
      title = title.replace('"', '');
      title = title.replace('title:','');
      title = title.replace(',', '');
      title = title.replace(/\s+/g,'');
      
      for(var j=i+1; j<htmlStr.length; j++){
        line2 = htmlStr[j];
        if(line2.indexOf('"videoId":') != -1){
          videoId = line2.replace('"videoId":', '');
          videoId = videoId.replace('"', '');
          videoId = videoId.replace('"', '');
          videoId = videoId.replace(',', '');
          videoId = videoId.replace(/\s+/g, '')
          break;
        }
        
      }
      
      var obj1 = new Object;
      
      obj1.title = title;
      obj1.videoId = videoId;
      
      resultList.push(obj1);
      
    }

  }
  
  return resultList;  
  
}

function GetFirstPageHtmlStr(playlistId, maxResult, apiKey, publishedAfter, publishedBefore){
  
  var URL = "";
  URL = "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId";
  URL += "=" + playlistId;
  URL += "&maxResults=" + maxResult;
  URL += "&key=" + apiKey;
  URL += "&publishedAfter=" + publishedAfter;
  URL += "&publishedBefore=" + publishedBefore;
  
  var response = UrlFetchApp.fetch(URL);
  var html = response.getContentText('UTF-8');
  var lines = html.split("\n");
  
  return lines;
}

function GetOnePageHtmlStr(pageToken, playlistId, maxResult, apiKey, publishedAfter, publishedBefore){
  
  var URL = "";
  URL = "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId";
  URL += "=" + encodeURIComponent(playlistId);
  URL += "&maxResults=" + encodeURIComponent(maxResult);
  URL += "&key=" + encodeURIComponent(apiKey);
  URL += "&publishedAfter="+ publishedAfter;
  URL += "&publishedBefore="+ publishedBefore;
  URL += "&pageToken=" + pageToken;

  var response = UrlFetchApp.fetch(URL);

  var html = response.getContentText('UTF-8');
  var lines = html.split("\n");
  
  return lines;
  
}